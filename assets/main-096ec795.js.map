{"version":3,"file":"main-096ec795.js","sources":["../../src/js/api.js","../../src/js/exercises.js","../../src/js/footer.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = \"https://energyflow.b.goit.study/api\";\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getExercises (bodypart = \"\", muscles = \"\", equipment = \"\", keyword = \"\", page, limit){\n\n\n    const response = await axios.get(\"/exercises\", {\n       params: {\n           bodypart,\n           muscles,\n           equipment,\n           keyword,\n           page,\n           limit,\n       }\n   })\n   return response.data;\n   \n}\n\n\nexport async function getExercisesByBodyPart (bodypart, page = 1, limit = 200){\n    return getExercises(bodypart, \"\", \"\", \"\", page, limit);\n\n}\n\nexport async function getExercisesByMuscles ( muscles, page = 1, limit = 200){\n\n    return getExercises(\"\", muscles, \"\", \"\", page, limit);\n\n   \n}\n\nexport async function getExercisesByEquipment ( equipment, page = 1, limit = 200){\n\n    return getExercises(\"\", \"\", equipment, \"\", page, limit);\n}\n\nexport async function searchExercisesByWord (keyword, page = 1, limit = 200) { \n    return getExercises(\"\", \"\", \"\", keyword, page, limit)\n} ;\n\nexport async function getFilter (filter = \"Muscles\", page = 1, limit = 200){\n\n\n    const response = await axios.get(\"/filters\", {\n       params: {\n           filter,\n           page,\n           limit,\n       }\n   }\n   )\n   return response.data;\n}\n\nexport async function getExerciseById(id){\n    const response = await axios.get(`/exercises/${id}`);\n   \n    return response.data; \n}\n\nexport async function getQuote(){\n    const response = await axios.get(`/quote`);\n   \n    return response.data; \n}\n\nexport async function postSubscriptions(email){\n    const response = await axios.post('/subscription', { \"email\": email });\n    //409 error такий email вже підписаний\n    return response.data;\n}\n\nexport async function addExerciseRatingById(id, {email, rate, comment}){\n    const response = await axios.patch(`/exercises/${id}/rating`, { \"rate\": rate, \"email\": email, \"review\": comment });\n\n    return response;\n}","import * as api from './api.js';\nimport axios from 'axios';\n// import handlerStartBtn from './exercises_card.js';\n\nconst refs = {\n  filters: document.querySelector('.filters'),\n  exercises: document.querySelector('.exercises'),\n  navButtons: document.querySelector('.nav-buttons'),\n  musclesBtn: document.querySelector('.muscles-btn'),\n  exercisesTitle: document.querySelector('.exercises-title'),\n  searchForm: document.querySelector('.search-form'),\n};\n\nlet page = 1;\nlet limit = 0;\nlet searchQuery = 'Muscles';\nlet keyWord = '';\nlet filter = '';\nlet name = '';\nlet localResponse = null;\n\nfetchFilter();\nrefs.musclesBtn.classList.add('active-btn');\n\nrefs.filters.addEventListener('click', pressBtn);\nrefs.exercises.addEventListener('click', loadExercises);\n\nasync function fetchFilter() {\n  window.innerWidth < 768 ? (limit = 8) : (limit = 12);\n  const response = await api.getFilter(searchQuery, page, limit);\n\n  if (response.results.length === 0) {\n    refs.exercises.insertAdjacentHTML(\n      'beforeend',\n      `<p class=\"no-results-paragraph\">Unfortunately, <span class=\"no-results-span\">no results</span> were found. You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs.</p>`\n    );\n    return;\n  }\n  makeCards(response.results);\n  makeNavs(response.totalPages);\n}\n\nasync function pressBtn(event) {\n  filter = '';\n  name = '';\n  refs.exercises.addEventListener('click', loadExercises);\n  refs.exercisesTitle.innerHTML = `Exercises`;\n  refs.searchForm.style.display = 'none';\n  if (event.target.tagName !== 'BUTTON') {\n    return;\n  }\n  page = 1;\n  refs.exercises.innerHTML = '';\n\n  const activeBtn = document.querySelector('.active-btn');\n  if (activeBtn) {\n    activeBtn.classList.remove('active-btn');\n    activeBtn.classList.add('not-active-btn');\n  }\n  event.target.classList.add('active-btn');\n\n  searchQuery = event.target.innerHTML;\n  fetchFilter();\n}\n\nasync function makeCards(response) {\n  refs.exercises.innerHTML = '';\n\n  let markup = response\n    .sort((a, b) => a.name > b.name)\n    .map(({ name, filter, imgUrl }) => {\n      return `<li class=\"exercise\">\n        <img src=\"${imgUrl}\" alt=\"${name}\" loading=\"lazy\" class=\"exercise-image\">\n        <div class=\"exercise-info\">\n            <h1 class=\"exercise-subtitle\">${\n              name[0].toUpperCase() + name.slice(1)\n            }</h1>\n            <p class=\"exercise-filter\">${filter}</p>\n        </div>\n        </li>`;\n    })\n    .join('');\n\n  refs.exercises.insertAdjacentHTML('beforeend', markup);\n}\n\nasync function makeNavs(totalPages) {\n  refs.navButtons.innerHTML = '';\n  if (totalPages === 1 || !totalPages) {\n    return;\n  }\n  let markup =\n    '<li><button class=\"nav-button active-nav-button\" type=\"button\">1</button></li>';\n  for (let i = 2; i <= totalPages; i += 1) {\n    markup += `<li><button class=\"nav-button\" type=\"button\">${i}</button></li>`;\n  }\n  refs.navButtons.insertAdjacentHTML('beforeend', markup);\n}\n\nrefs.navButtons.addEventListener('click', async event => {\n  if (event.target.tagName !== 'BUTTON') {\n    return;\n  }\n  const activeBtn = document.querySelector('.active-nav-button');\n  if (activeBtn) {\n    activeBtn.classList.remove('active-nav-button');\n  }\n  event.target.classList.add('active-nav-button');\n  page = Number(event.target.innerHTML);\n  if (keyWord !== '') {\n    const response = await loadNextPageByKeyWord();\n    makeExercisesCards(response.results);\n    return;\n  }\n  if (filter !== '' && name !== '') {\n    const response = await defineAndLoadSearchType(filter, name);\n    makeExercisesCards(response.results);\n    return;\n  }\n  const response = await api.getFilter(searchQuery, page, limit);\n  makeCards(response.results);\n});\n\nasync function loadExercises(event) {\n  refs.searchForm.style.display = 'block';\n\n  let tag = event.target;\n  page = 1;\n\n  if (tag.tagName === 'IMG') {\n    tag = tag.nextElementSibling;\n  }\n  if (tag.tagName === 'LI' || tag.tagName === 'P' || tag.tagName === 'H1') {\n    tag = tag.offsetParent;\n  }\n\n  filter = tag.lastElementChild.innerHTML;\n  name = tag.firstElementChild.innerHTML.toLowerCase();\n  refs.exercisesTitle.innerHTML = `Exercises / <span class=\"exercises-subtitle\">${\n    name[0].toUpperCase() + name.slice(1)\n  }</span>`;\n\n  let resp = await defineAndLoadSearchType(filter, name);\n\n  if (resp.results === undefined || resp.results.length === 0) {\n    refs.exercises.innerHTML = `<p class=\"no-results-paragraph\">Unfortunately, <span class=\"no-results-span\">no results</span> were found. You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs.</p>`;\n    return;\n  }\n  refs.exercises.removeEventListener('click', loadExercises);\n\n  makeExercisesCards(resp.results);\n  //  refs.navButtons.innerHTML = '';\n  makeNavs(resp.totalPages);\n}\n\nasync function defineAndLoadSearchType(filter, name) {\n  switch (filter) {\n    case 'Muscles':\n      return await api.getExercisesByMuscles(name, page, limit);\n    case 'Body parts':\n      return await api.getExercisesByBodyPart(name, page, limit);\n    case 'Equipment':\n      return await api.getExercisesByEquipment(name, page, limit);\n    default:\n      refs.exercises.insertAdjacentHTML(\n        'beforeend',\n        `<p class=\"no-results-paragraph\">Unfortunately, <span class=\"no-results-span\">no results</span> were found. You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs.</p>`\n      );\n  }\n}\n\nasync function makeExercisesCards(response) {\n  refs.exercises.innerHTML = '';\n  localResponse = response;\n  const markup = response\n    .sort((a, b) => a.name > b.name)\n    .map(({ name, _id, rating, burnedCalories, bodyPart, target }) => {\n      if (rating % 1 === 0) {\n        rating = rating + '.0';\n      }\n      return `<li data-id-card=\"${_id}\" data-component=\"fav_card\" class=\"list_item\">\n            <div class=\"fav_card\">\n              <div class=\"actions_wrapper\">\n                <div class=\"workout_wrapper\">\n                  <span class=\"workout\">workout</span>\n                    <span>${rating}\n                      <svg fill=\"#EEA10C\" width=\"18\" height=\"18\" aria-label=\"star icon\">\n                        <use href=\"../images/icon.svg#icon-star\"></use>\n                      </svg>\n                    </span>\n                </div>\n                <button data-action=\"start_exercise_btn\" data-id-start-btn=\"${_id}\" class=\"btn\">\n                  <span class=\"start\">Start</span>\n                  <svg stroke=\"#1B1B1B\" width=\"16\" height=\"16\" aria-label=\"arrow icon\">\n                    <use href=\"../images/icon.svg#icon-arrow\"></use>\n                  </svg>\n                </button>\n              </div>\n  \n              <div class=\"inner_wrapper\">\n                <div class=\"icon_man\">\n                  <svg width=\"16\" height=\"16\">\n                    <use href=\"../images/icon.svg#icon-man\"></use>\n                  </svg>\n                </div>\n                <p class=\"exercise_name\">${name}</p>\n              </div>\n  \n              <div class=\"details_wrapper\">\n                <ul class=\"details_list\">\n                  <li>\n                    <div class=\"detail_wrapper\">\n                      <p class=\"detail_item\">\n                        Burned calories:\n                        <span class=\"detail_value\">${burnedCalories} / 3 min</span>\n                      </p>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"detail_wrapper\">\n                      <p class=\"detail_item\">\n                        Body part: <span class=\"detail_value\">${bodyPart}</span>\n                      </p>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"detail_wrapper\">\n                      <p class=\"detail_item\">\n                        Target: <span class=\"detail_value\">${target}</span>\n                      </p>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </li>`;\n    })\n    .join('');\n\n  refs.exercises.insertAdjacentHTML('beforeend', markup);\n}\n\n// refs.exercises.addEventListener('click', event => {\n//   const startBtn = event.target.closest('[data-action=\"start_exercise_btn\"]');\n//   const cardComponent = event.target.closest('[data-component=\"fav_card\"]');\n\n//   if (!event.target.tagName === 'BUTTON' || (!startBtn)) {\n//     return;\n//   }\n//   if (startBtn) {\n//     const startId = startBtn.dataset.idStartBtn;\n//     const outputObj = localResponse.find(obj => obj._id === startId);\n\n//     handlerStartBtn(outputObj);\n//   }\n// });\n\nrefs.searchForm.addEventListener('submit', async event => {\n  event.preventDefault();\n  keyWord = event.target.searchQuery.value.trim();\n  event.target.reset();\n  page = 1;\n  let response = await loadNextPageByKeyWord();\n\n  if (response.results.length === 0) {\n    refs.exercises.innerHTML = `<p class=\"no-results-paragraph\">Unfortunately, <span class=\"no-results-span\">no results</span> were found. You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs.</p>`;\n    refs.navButtons.innerHTML = '';\n    return;\n  }\n  makeExercisesCards(response.results);\n  makeNavs(response.totalPages);\n});\n\nasync function loadNextPageByKeyWord() {\n  switch (filter) {\n    case 'Muscles':\n      return await api.getExercises(\n        undefined,\n        name,\n        undefined,\n        keyWord,\n        page,\n        limit\n      );\n    case 'Body parts':\n      return  await api.getExercises(\n        name,\n        undefined,\n        undefined,\n        keyWord,\n        page,\n        limit\n      );\n    case 'Equipment':\n      return await api.getExercises(\n        undefined,\n        undefined,\n        name,\n        keyWord,\n        page,\n        limit\n      );\n    default:\n      refs.exercises.innerHTML = `<p class=\"no-results-paragraph\">Unfortunately, <span class=\"no-results-span\">no results</span> were found. You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs.</p>`;\n  }\n}\n","import throttle from 'lodash.throttle';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('form');\nconst email = document.querySelector('input');\nconst expressionKey = 'feedback-form-state';\n\nfunction saveDataToLocalStorage() {\n  const formData = {\n    email: email.value,\n  };\n  localStorage.setItem(expressionKey, JSON.stringify(formData));\n}\n\nfunction refillDataFromLocalStorage() {\n  const localData = localStorage.getItem(expressionKey);\n\n  if (localData) {\n    const formData = JSON.parse(localData);\n    email.value = formData.email || '';\n  }\n}\n\nrefillDataFromLocalStorage();\n\nemail.addEventListener('input', throttle(saveDataToLocalStorage, 500));\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  if (!isValidEmail(email.value)) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please enter a valid email address',\n    });\n    return;\n  }\n\n  const formData = {\n    email: email.value,\n  };\n\n  fetch('https://energyflow.b.goit.study/api/subscription', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(formData),\n  })\n    .then(response => {\n      if (response.status === 409) {\n        iziToast.error({\n          title: 'Error',\n          message:\n            'The email address already exists or there is a data conflict',\n        });\n        throw new Error('Email already exists');\n      }\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log('Success:', data);\n      iziToast.success({\n        title: 'Success',\n        message: 'Welcome to energy.flow world!',\n      });\n\n      localStorage.removeItem(expressionKey);\n      email.value = '';\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      if (error.message !== 'Email already exists') {\n        iziToast.error({\n          title: 'Error',\n          message: 'Something went wrong! Please try again later',\n        });\n      }\n    });\n}\n\nfunction isValidEmail(email) {\n  const emailRegex = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n  return emailRegex.test(email);\n}\n"],"names":["BASE_URL","axios","getExercises","bodypart","muscles","equipment","keyword","page","limit","getExercisesByBodyPart","getExercisesByMuscles","getExercisesByEquipment","getFilter","filter","refs","searchQuery","keyWord","name","fetchFilter","pressBtn","loadExercises","response","api.getFilter","makeCards","makeNavs","event","activeBtn","markup","a","b","imgUrl","totalPages","i","loadNextPageByKeyWord","makeExercisesCards","defineAndLoadSearchType","tag","resp","api.getExercisesByMuscles","api.getExercisesByBodyPart","api.getExercisesByEquipment","_id","rating","burnedCalories","bodyPart","target","api.getExercises","form","email","expressionKey","saveDataToLocalStorage","formData","refillDataFromLocalStorage","localData","throttle","handleSubmit","isValidEmail","iziToast","data","error"],"mappings":"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"}