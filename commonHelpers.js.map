{"version":3,"file":"commonHelpers.js","sources":["../src/js/favourite_main.js"],"sourcesContent":["import * as api from './api.js';\n\nconst quoteText = document.querySelector('.quote-text');\nconst quoteAuthor = document.querySelector('.quote-author');\nconst localStorageQuoteKey = 'quote-info';\nconst getDataFromLS = JSON.parse(localStorage.getItem(localStorageQuoteKey));\nconst quoteInfo = {\n  quote: '',\n  author: '',\n  date: 0,\n};\n\nif (getDataFromLS && getDataFromLS.date != new Date().getDate()) {\n  quoteText.textContent = getDataFromLS.quote;\n  quoteAuthor.textContent = getDataFromLS.author;\n  fetchQuote();\n} else {\n  if (getDataFromLS) {\n    quoteText.textContent = getDataFromLS.quote;\n    quoteAuthor.textContent = getDataFromLS.author;\n  }\n  fetchQuote();\n}\n\nfunction fetchQuote() {\n  api.getQuote()\n    .then(newQuote => saveQuote(newQuote))\n    .catch(error => console.log(error));\n}\n\nfunction saveQuote(newQuote) {\n  quoteInfo.quote = newQuote.quote;\n  quoteInfo.author = newQuote.author;\n  quoteInfo.date = new Date().getDate();\n  localStorage.setItem(localStorageQuoteKey, JSON.stringify(quoteInfo));\n}\n"],"names":["quoteText","quoteAuthor","localStorageQuoteKey","getDataFromLS","quoteInfo","fetchQuote","api.getQuote","newQuote","saveQuote","error"],"mappings":"6HAEA,MAAMA,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAuB,aACvBC,EAAgB,KAAK,MAAM,aAAa,QAAQD,CAAoB,CAAC,EACrEE,EAAY,CAChB,MAAO,GACP,OAAQ,GACR,KAAM,CACR,EAEID,GAAiBA,EAAc,MAAQ,IAAI,KAAM,EAAC,QAAO,GAC3DH,EAAU,YAAcG,EAAc,MACtCF,EAAY,YAAcE,EAAc,OACxCE,MAEIF,IACFH,EAAU,YAAcG,EAAc,MACtCF,EAAY,YAAcE,EAAc,QAE1CE,KAGF,SAASA,GAAa,CACpBC,EAAc,EACX,KAAKC,GAAYC,EAAUD,CAAQ,CAAC,EACpC,MAAME,GAAS,QAAQ,IAAIA,CAAK,CAAC,CACtC,CAEA,SAASD,EAAUD,EAAU,CAC3BH,EAAU,MAAQG,EAAS,MAC3BH,EAAU,OAASG,EAAS,OAC5BH,EAAU,KAAO,IAAI,KAAM,EAAC,QAAO,EACnC,aAAa,QAAQF,EAAsB,KAAK,UAAUE,CAAS,CAAC,CACtE"}