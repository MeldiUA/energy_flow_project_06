{"version":3,"file":"commonHelpers.js","sources":["../src/js/favourite_main.js","../src/js/favourite_exercises.js"],"sourcesContent":["import * as api from './api.js';\n\nconst quoteText = document.querySelector('.quote-text');\nconst quoteAuthor = document.querySelector('.quote-author');\nconst localStorageQuoteKey = 'quote-info';\nconst getDataFromLS = JSON.parse(localStorage.getItem(localStorageQuoteKey));\nconst quoteInfo = {\n  quote: '',\n  author: '',\n  date: 0,\n};\n\nif (getDataFromLS && getDataFromLS.date != new Date().getDate()) {\n  quoteText.textContent = getDataFromLS.quote;\n  quoteAuthor.textContent = getDataFromLS.author;\n  fetchQuote();\n} else {\n  if (getDataFromLS) {\n    quoteText.textContent = getDataFromLS.quote;\n    quoteAuthor.textContent = getDataFromLS.author;\n  }\n  fetchQuote();\n}\n\nfunction fetchQuote() {\n  api.getQuote()\n    .then(newQuote => saveQuote(newQuote))\n    .catch(error => console.log(error));\n}\n\nfunction saveQuote(newQuote) {\n  quoteInfo.quote = newQuote.quote;\n  quoteInfo.author = newQuote.author;\n  quoteInfo.date = new Date().getDate();\n  localStorage.setItem(localStorageQuoteKey, JSON.stringify(quoteInfo));\n}\n"," import handlerStartBtn from './exercises_card.js';\n\nimport {\n  getFav,\n  setFav,\n  removeFromFav,\n  LS_FAV,\n} from './localalStorageLogical.js';\n\nconst refs = {\n  cardSet: document.querySelector('.fav_card_list'),\n  noCards: document.querySelector('.no_cards_wrapper'),\n};\n\n// emulation\n\n// const demoObj1 = {\n//   name: 'Air bike',\n//   excDetails: {\n//     burnedCalories: 13,\n//     bodyPart: 'Waist',\n//     target: 'Biceps',\n//   },\n//   _id: 1,\n//   favourite: true,\n// };\n\n// const demoObj2 = {\n//   name: 'Stationary bike walk',\n//   excDetails: {\n//     burnedCalories: 116,\n//     bodyPart: 'Cardio',\n//     target: 'Cardiovascular system',\n//   },\n//   _id: 2,\n//   favourite: false,\n// };\n\n// const demoObj2_5 = {\n//   name: 'Stationary bike walk',\n//   excDetails: {\n//     burnedCalories: 116,\n//     bodyPart: 'Cardio',\n//     target: 'Cardiovascular system',\n//   },\n//   _id: 2,\n//   favourite: false,\n// };\n\n// const demoObj3 = {\n//   name: 'mcChicken burger',\n//   excDetails: {\n//     burnedCalories: -150,\n//     bodyPart: 'Tummy',\n//     target: 'Hunger',\n//   },\n//   _id: 3,\n// };\n\n// const fav = [demoObj1, demoObj2, demoObj2_5, demoObj3];\n\n// setFav(fav);\n\n// render logic\n\nconst uniqueIdFilter = arr => {\n  const uniqueIds = new Set();\n  const newArray = arr.filter(obj => {\n    if (!uniqueIds.has(obj._id)) {\n      uniqueIds.add(obj._id);\n      return true;\n    }\n    return false;\n  });\n  return newArray;\n};\n\nconst renderCards = arr => {\n  const uniqueIdOnlyArray = uniqueIdFilter(arr);\n\n  const markup = uniqueIdOnlyArray.map(\n    ({ name, _id, burnedCalories, bodyPart, target } ) => {\n      return `<li data-id-card=\"${_id}\" data-component=\"fav_card\" class=\"list_item\">\n          <div class=\"fav_card\">\n            <div class=\"actions_wrapper\">\n              <div class=\"workout_wrapper\">\n                <span class=\"workout\">workout</span>\n                <button data-id-del-btn=\"${_id}\" data-action=\"delete_fav_card\" class=\"btn\">\n                  <svg width=\"16\" height=\"16\" aria-label=\"trash icon\">\n                    <use href=\"./images/icon.svg#icon-trash\"></use>\n                  </svg>\n                </button>\n              </div>\n              <button data-id-start-btn=\"${_id}\" data-action=\"start_exercise_btn\" class=\"btn\">\n                <span class=\"start\">start</span>\n                <svg width=\"16\" height=\"16\" aria-label=\"arrow icon\">\n                  <use href=\"./images/icon.svg#icon-arrow\"></use>\n                </svg>\n              </button>\n            </div>\n\n            <div class=\"inner_wrapper\">\n              <div class=\"icon_man\">\n                <svg width=\"16\" height=\"16\">\n                  <use href=\"./images/icon.svg#icon-man\"></use>\n                </svg>\n              </div>\n              <p class=\"exercise_name\">${name}</p>\n            </div>\n\n            <div class=\"details_wrapper\">\n              <ul class=\"details_list\">\n                <li>\n                  <div class=\"detail_wrapper\">\n                    <p class=\"detail_item\">\n                      Burned calories:\n                      <span class=\"detail_value\">${burnedCalories} / 3 min</span>\n                    </p>\n                  </div>\n                </li>\n                <li>\n                  <div class=\"detail_wrapper\">\n                    <p class=\"detail_item\">\n                      Body part: <span class=\"detail_value\">${bodyPart}</span>\n                    </p>\n                  </div>\n                </li>\n                <li>\n                  <div class=\"detail_wrapper\">\n                    <p class=\"detail_item\">\n                      Target: <span class=\"detail_value\">${target}</span>\n                    </p>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </li>`;\n    }\n  );\n\n  refs.cardSet.innerHTML = markup.join('');\n};\n\n// delete and start card logic\n\nconst onClick = e => {\n  const startBtn = e.target.closest('[data-action=\"start_exercise_btn\"]');\n  const deleteBtn = e.target.closest('[data-action=\"delete_fav_card\"]');\n  const cardComponent = e.target.closest('[data-component=\"fav_card\"]');\n\n  if (!e.target.tagName === 'BUTTON' || (!deleteBtn && !startBtn)) {\n    return;\n  }\n\n  if (deleteBtn) {\n    if (deleteBtn.dataset.idDelBtn === cardComponent.dataset.idCard) {\n      const idToRemove = deleteBtn.dataset.idDelBtn;\n      removeFromFav(idToRemove);\n      checkStorage();\n    } else return;\n  } else if (startBtn) {\n    const startId = startBtn.dataset.idStartBtn;\n    const arr = getFav(LS_FAV);\n    const outputObj = arr.find(obj => obj._id === startId);\n    handlerStartBtn(outputObj, true, true);\n  }\n};\n\n// check storage logic\n\nconst checkStorage = () => {\n  const isFavsExist = getFav(LS_FAV) !== null;\n\n  if (!isFavsExist) {\n    refs.noCards.classList.remove('visually-hidden');\n    refs.cardSet.classList.add('visually-hidden');\n  } else {\n    refs.noCards.classList.add('visually-hidden');\n    refs.cardSet.classList.remove('visually-hidden');\n    renderCards(getFav(LS_FAV));\n    refs.cardSet.addEventListener('click', onClick);\n  }\n};\n\ncheckStorage();\n"],"names":["quoteText","quoteAuthor","localStorageQuoteKey","getDataFromLS","quoteInfo","fetchQuote","api.getQuote","newQuote","saveQuote","error","refs","uniqueIdFilter","arr","uniqueIds","obj","renderCards","markup","name","_id","burnedCalories","bodyPart","target","onClick","e","startBtn","deleteBtn","cardComponent","idToRemove","removeFromFav","checkStorage","startId","outputObj","getFav","LS_FAV","handlerStartBtn"],"mappings":"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"}